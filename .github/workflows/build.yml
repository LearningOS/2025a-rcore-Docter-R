name: Jobs

on: [push]

env:
  CARGO_TERM_COLOR: always
  rust_toolchain: nightly

jobs:
  build-doc:
    if: github.repository == 'LearningOS/rCore-Tutorial-Code'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Build doc
        run: |
          git clone https://github.com/LearningOS/rCore-Tutorial-Test.git user
          cd os
          make
          cargo doc --no-deps --verbose
      - name: Push to gh-pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./os/target/riscv64gc-unknown-none-elf/doc
          destination_dir: ${{ github.ref_name }}
  basic-test:
    runs-on: ubuntu-latest
    outputs:
      points: ${{ steps.end.outputs.points }}
    container:
      image: alicesama/rcore-ci:2024a
    steps:
      - uses: actions/checkout@v4
      - name: Run tests
        run: |
          qemu-system-riscv64 --version
          rustup target add riscv64gc-unknown-none-elf
          git config --global --add safe.directory /__w/${{ github.event.repository.name }}/${{ github.event.repository.name }}
          git clone https://github.com/LearningOS/rCore-Tutorial-Checker.git ci-user
          git clone https://github.com/LearningOS/rCore-Tutorial-Test.git ci-user/user
          ID=`git rev-parse --abbrev-ref HEAD | grep -oP 'ch\K[0-9]'`
          cd ci-user
          make test CHAPTER=$ID | tee ../output.txt
      - name: end
        id: end
        run: grep -a "Test passed" output.txt | grep -oP "\d{1,}/\d{1,}" | xargs -i echo "points={}" | tee $GITHUB_OUTPUT
  deploy:
    if: github.repository != 'LearningOS/rCore-Tutorial-Code'
    name: Deploy to pages
    needs: basic-test
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - uses: actions/checkout@v3
        continue-on-error: true
        with:
          ref: gh-pages
      - name: Save Log File
        uses: yfblock/multi-rank-log@main
        with:
          public-dir: classroom
          points: ${{ needs.basic-test.outputs.points }}
      - name: GitHub Pages
        uses: crazy-max/ghaction-github-pages@v3
        with:
          target_branch: gh-pages
          build_dir: ./classroom
          keep_history: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload score
        run: |
          cat classroom/latest.json
          score=$(( $(grep -o 'ch' classroom/latest.json | wc -l) * 100))
          echo $score

          score_json=$(jq -n \
            --arg channel github \
            --argjson courseId ${{ secrets.RCORE_2025_AUTUMN_COURSE_ID }} \
            --arg name ${{ github.actor }} \
            --argjson score $score \
            --argjson totalScore 500 \
            '{channel: $channel, courseId: $courseId, name: $name, score: $score, totalScore: $totalScore}')

          response=$(curl -X POST ${{ secrets.COURSE_POST_API }} \
            -H "accept: application/json;charset=utf-8" \
            -H "Content-Type: application/json" \
            -H "token: ${{ secrets.RCORE_2025_AUTUMN_TOKEN }}" \
            -d "$score_json" \
            -v)

          echo "Response: $response"

          if echo "$response" | grep -q '"result":1'; then
            echo "Success: The result field contains 1."
          else
            echo "Error: The result field does not contain 1."
            exit 1
          fi
